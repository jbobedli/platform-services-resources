{{- $policyname := "disallow-execbynamespace" }}
{{- $defaults := .Values.defaults }}
{{- range $policy := .Values.policies}}
{{- if (eq $policy.name $policyname) }}
apiVersion: kyverno.io/v1
kind: {{- template "clusterOrNot" (dict "policy" $policy) }}
metadata:
{{- template "getNamespace" (dict "policy" $policy) }}
  name: {{ default $policyname $policy.custom_name }}
  annotations:
    dar.kyverno.template/file: {{$policyname}}
    dar.kyverno.policy/suitableforproduction: 'true'
    dar.kyverno.policy/category: Security
    kyverno.io/kyverno-version: 1.6.0
    dar.kyverno.policy/subject: Pod
    dar.kyverno.policy/description: >-
      The `exec` command may be used to gain shell access, or run other commands, in a Pod's container. While this can
      be useful for troubleshooting purposes, it could represent an attack vector and is discouraged.  
    dar.kyverno.template/parameters: 'true'
    dar.kyverno.template/filters: 'false'    
        
spec:
  validationFailureAction: {{ default $defaults.validation $policy.validation }}
  background: {{ default $defaults.background $policy.background }}
  rules:
  - name: deny-exec-ns-pci
    match:
      any:
      - resources:
          kinds:
          - PodExecOptions
    preconditions:
      all:
      - key: "{{ printf "{{ request.operation || 'BACKGROUND' }}" | toString }}"
        operator: Equals
        value: CONNECT
    validate:
      message: Pods in this namespace may not be exec'd into.
      deny:
        conditions:
          any:
          - key: "{{ printf "{{ request.namespace }}" | toString }}"
            operator: Equals
            value: "{{- template "evaluateNamespace2" (dict "policy" $policy) }}"
            
{{- end }}
{{- end }}
