{{- $policyname := "require-qos" }}
{{- $defaults := .Values.defaults }}
{{- range $policy := .Values.policies}}
{{- if (eq $policy.name $policyname) }}
apiVersion: kyverno.io/v1
kind: {{- template "clusterOrNot" (dict "policy" $policy) }}
metadata:
{{- template "getNamespace" (dict "policy" $policy) }}
  name: {{ default $policyname $policy.custom_name }}
  annotations:
    pod-dar.kyverno/autogen-controllers: none
    dar.kyverno.template/file: {{$policyname}}
    dar.kyverno.policy/suitableforproduction: 'true'
    dar.kyverno.policy/category: Other
    dar.kyverno.policy/subject: Resources
    kyverno.io/minversion: 1.6.0
    dar.kyverno.policy/description: >-
      Los pods que tienen request y limit de memoria iguales se consideran QoS.
    dar.kyverno.template/parameters: 'false'
    dar.kyverno.template/filter: 'true'
spec:
  validationFailureAction: {{ default $defaults.validation $policy.validation }}
  background: {{ default $defaults.background $policy.background }}
  rules:
  - name: memory-requests-equal-limits-resource
    match:
      any:
      - resources:
          kinds:
          - Deployment
          - Daemonset
          - StatefulSet
          - Job
          selector:
            matchLabels:
              kyverno.application/qos: "true"
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
          any:
          - key: "{{ printf "{{ request.object.spec.template.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) }}" | toString }}"
            operator: NotEquals
            value: 0
  - name: memory-requests-equal-limits-pod
    match:
      any:
      - resources:
          kinds:
          - Pod
          selector:
            matchLabels:
              kyverno.application/qos: "true"
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
          any:
          - key: "{{ printf "{{ request.object.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) }}" | toString }}"
            operator: NotEquals
            value: 0
  - name: memory-requests-equal-limits-cronjob
    match:
      any:
      - resources:
          kinds:
          - CronJob
          selector:
            matchLabels:
              kyverno.application/qos: "true"
    validate:
      message: "resources.requests.memory must be equal to resources.limits.memory"
      deny:
        conditions:
          any:
          - key: "{{ printf "{{ request.object.spec.jobTemplate.spec.template.spec.containers[?resources.requests.memory!=resources.limits.memory] | length(@) }}" | toString }}"
            operator: NotEquals
            value: 0
  {{- end }}
{{- end }}